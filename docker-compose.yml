version: "3.8"

services:
  backend:
    build:
      context: ./server/SchatzInDb
      dockerfile: Dockerfile
    container_name: spring-app
    depends_on:
      - userdb
      - taskdb
    ports:
      - "8080:8080"
    environment:
      # USER DB
      SPRING_DATASOURCE_USERDB_JDBC_URL: jdbc:postgresql://userdb:5432/datenbankspiel_user
      SPRING_DATASOURCE_USERDB_USERNAME: postgres
      SPRING_DATASOURCE_USERDB_PASSWORD: postgresql
      SPRING_DATASOURCE_USERDB_DRIVER_CLASS_NAME: org.postgresql.Driver
      # TASK DB
      SPRING_DATASOURCE_TASKDB_JDBC_URL: jdbc:postgresql://taskdb:5432/datenbankspiel_task
      SPRING_DATASOURCE_TASKDB_USERNAME: postgres
      SPRING_DATASOURCE_TASKDB_PASSWORD: postgresql
      SPRING_DATASOURCE_TASKDB_DRIVER_CLASS_NAME: org.postgresql.Driver
    networks:
      - backend
    volumes:
      - /srv/queryCrime/logs:/srv/queryCrime/logs
    restart: unless-stopped

  userdb:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: datenbankspiel_user
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresql
    ports:
      - "5433:5432"
    networks:
      - backend
    volumes:
      - userdb-data:/var/lib/postgresql/data
    restart: unless-stopped

  taskdb:
    image: postgres:15
    container_name: task-db
    environment:
      POSTGRES_DB: datenbankspiel_task
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresql
    ports:
      - "5434:5432"
    networks:
      - backend
    volumes:
      - taskdb-data:/var/lib/postgresql/data
    restart: unless-stopped

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: react-app
    ports:
      - "3000:80"  # Внешний 3000 : внутренний для nginx 80
    networks:
      - backend

networks:
  backend:

volumes:
  userdb-data:
  taskdb-data:
