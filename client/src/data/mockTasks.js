const mockTasks = {
    easy: {
        regularTasks: [
            {
                id: 1,
                name: "SELECT Basics",
                topic: "SELECT",
                points: 5,
                description: "Write a query to select all columns from the 'users' table.",
                hint: "Try using: SELECT * FROM users;",
                correctAnswer: "SELECT * FROM users;",
            },
            {
                id: 2,
                name: "Simple JOIN",
                topic: "JOIN",
                points: 5,
                description: "Join 'users' and 'orders' tables to get user orders.",
                hint: "Try using: SELECT * FROM users JOIN orders ON users.id = orders.user_id;",
                correctAnswer: "SELECT * FROM users JOIN orders ON users.id = orders.user_id;",
            },
        ],
        finalTest: {
            tasks: [
                {
                    id: 1,
                    name: "Test Task 1",
                    topic: "SELECT",
                    points: 5,
                    description: "Select names from 'users' where age > 30.",
                    hint: "Try using: SELECT name FROM users WHERE age > 30;",
                    correctAnswer: "SELECT name FROM users WHERE age > 30;",
                },
                {
                    id: 2,
                    name: "Test Task 2",
                    topic: "SELECT",
                    points: 5,
                    description: "Select distinct cities from 'users'.",
                    hint: "Try using: SELECT DISTINCT city FROM users;",
                    correctAnswer: "SELECT DISTINCT city FROM users;",
                },
                {
                    id: 3,
                    name: "Test Task 3",
                    topic: "JOIN",
                    points: 5,
                    description: "Join 'users' and 'orders' to count orders per user.",
                    hint: "Try using: SELECT users.name, COUNT(orders.id) FROM users JOIN orders ON users.id = orders.user_id GROUP BY users.name;",
                    correctAnswer: "SELECT users.name, COUNT(orders.id) FROM users JOIN orders ON users.id = orders.user_id GROUP BY users.name;",
                },
                {
                    id: 4,
                    name: "Test Task 4",
                    topic: "WHERE",
                    points: 5,
                    description: "Select orders from 'orders' where total > 100.",
                    hint: "Try using: SELECT * FROM orders WHERE total > 100;",
                    correctAnswer: "SELECT * FROM orders WHERE total > 100;",
                },
                {
                    id: 5,
                    name: "Test Task 5",
                    topic: "GROUP BY",
                    points: 5,
                    description: "Group users by city and count them.",
                    hint: "Try using: SELECT city, COUNT(*) FROM users GROUP BY city;",
                    correctAnswer: "SELECT city, COUNT(*) FROM users GROUP BY city;",
                },
                {
                    id: 6,
                    name: "Test Task 6",
                    topic: "SELECT",
                    points: 5,
                    description: "Select names from 'users' ordered by name.",
                    hint: "Try using: SELECT name FROM users ORDER BY name;",
                    correctAnswer: "SELECT name FROM users ORDER BY name;",
                },
                {
                    id: 7,
                    name: "Test Task 7",
                    topic: "JOIN",
                    points: 5,
                    description: "Join 'users' and 'orders' to get orders from last month.",
                    hint: "Try using: SELECT * FROM users JOIN orders ON users.id = orders.user_id WHERE orders.date >= '2023-10-01';",
                    correctAnswer: "SELECT * FROM users JOIN orders ON users.id = orders.user_id WHERE orders.date >= '2023-10-01';",
                },
                {
                    id: 8,
                    name: "Test Task 8",
                    topic: "WHERE",
                    points: 5,
                    description: "Select users with names starting with 'A'.",
                    hint: "Try using: SELECT * FROM users WHERE name LIKE 'A%';",
                    correctAnswer: "SELECT * FROM users WHERE name LIKE 'A%';",
                },
                {
                    id: 9,
                    name: "Test Task 9",
                    topic: "GROUP BY",
                    points: 5,
                    description: "Group orders by user and sum their totals.",
                    hint: "Try using: SELECT user_id, SUM(total) FROM orders GROUP BY user_id;",
                    correctAnswer: "SELECT user_id, SUM(total) FROM orders GROUP BY user_id;",
                },
                {
                    id: 10,
                    name: "Test Task 10",
                    topic: "SELECT",
                    points: 5,
                    description: "Select the top 5 users by age.",
                    hint: "Try using: SELECT * FROM users ORDER BY age DESC LIMIT 5;",
                    correctAnswer: "SELECT * FROM users ORDER BY age DESC LIMIT 5;",
                },
            ],
        },
    },
    medium: {
        regularTasks: [
            {
                id: 1,
                name: "Complex JOINs",
                topic: "JOIN",
                points: 10,
                description: "Join three tables: 'users', 'orders', and 'products'.",
                hint: "Try using: SELECT * FROM users JOIN orders ON users.id = orders.user_id JOIN products ON orders.product_id = products.id;",
                correctAnswer: "SELECT * FROM users JOIN orders ON users.id = orders.user_id JOIN products ON orders.product_id = products.id;",
            },
        ],
        finalTest: {
            tasks: [],
        },
    },
    hard: {
        regularTasks: [
            {
                id: 1,
                name: "Subqueries",
                topic: "Subqueries",
                points: 15,
                description: "Write a subquery to find users with more than 5 orders.",
                hint: "Try using: SELECT * FROM users WHERE id IN (SELECT user_id FROM orders GROUP BY user_id HAVING COUNT(*) > 5);",
                correctAnswer: "SELECT * FROM users WHERE id IN (SELECT user_id FROM orders GROUP BY user_id HAVING COUNT(*) > 5);",
            },
        ],
        finalTest: {
            tasks: [],
        },
    },
};

export default mockTasks;